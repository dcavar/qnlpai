rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function validRating() {
      return request.resource.data.contentRating >= 0 && request.resource.data.contentRating <= 5 &&
        request.resource.data.styleRating >= 0 && request.resource.data.styleRating <= 5
        && request.resource.data.comment.size() <= 256;
    }

    match /blog/{post} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /config/{config} {
      allow read, write: if false; // allow each section separately
    }

    match /featuredSessions/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /gallery/{photo} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /notificationsSubscribers/{token} {
      allow list: if false;

      // Applies to document create requests
      allow create;
      allow update;
      allow delete;
      allow get;
    }

    match /notificationsUsers/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /partners/{groupId} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;

      // TODO: Remove
      match /items/{itemId} {
        // Applies to single document read requests
        allow get;

        // Applies to queries and collection read requests
        allow list;

        // Disallow writes
        allow write: if false;
      }
    }

    match /{path=**}/items/{itemId} {
      allow read;
      allow write: if false;
    }

    match /potentialPartners/{partnerId} {
      allow delete: if false;

      allow get;
      allow list: if false;

      // Applies to document create requests
      //allow create;
      allow write;
    }

    match /previousSpeakers/{speaker} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /schedule/{day} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /generatedSchedule/{day} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /sessions/{session} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;

      // TODO: remove
      match /feedback/{userId} {
        allow read, delete: if request.auth.uid == userId;
        allow write: if request.auth.uid == userId && validRating();
      }
    }

    match /{path=**}/feedback/{userId} {
      allow read, delete: if request.auth.uid == userId;
      allow list: if request.auth.uid == resource.data.userId;
      allow write: if request.auth.uid == userId && resource.data.userId == userId && validRating();
    }

    match /generatedSessions/{session} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /speakers/{speaker} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /generatedSpeakers/{speaker} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /subscribers/{subscriberId} {
      allow delete: if false;

      allow get;
      allow list: if false;

      // Applies to document create requests
      //allow create;
      allow write;
    }

    match /team/{teamId} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;

      // TODO: remove
      match /members/{memberId} {
        // Applies to single document read requests
        allow get;

        // Applies to queries and collection read requests
        allow list;

        // Disallow writes
        allow write: if false;
      }
    }

    match /{path=**}/members/{memberId} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    match /tickets/{ticket} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }

    // TODO: Remove along with data
    match /users/{userId} {
      allow list: if false;

      allow get: if request.auth.uid == userId;

      allow create, delete: if false;
      allow update: if request.auth.uid == userId;
    }

    match /videos/{video} {
      // Applies to single document read requests
      allow get;

      // Applies to queries and collection read requests
      allow list;

      // Disallow writes
      allow write: if false;
    }
  }
}
